@*@model IEnumerable<EBookStore.Models.Product>*@
@model ReflectionIT.Mvc.Paging.PagingList<EBookStore.Models.Product>
@using ReflectionIT.Mvc.Paging
@using EBookStore.Utility
@addTagHelper *,ReflectionIT.Mvc.Paging
 

<!--<div class="bg-image d-flex justify-content-center align-items-center rounded-1"
     style=" background: url('http://ecs.com.np/fckimage/article/images/2016/7/buddhi.jpg'); background-repeat: no-repeat; height: 70vh; background-position: center; margin-bottom: 5px; /* Center the image */ background-repeat: no-repeat; /* Do not repeat the image */ background-size: cover; /* Resize the background image to cover the entire container */ ">-->
@*<h1 class="text-white">Page title</h1>*@
<!--</div>-->


@if (User.IsInRole(SD.Role_Employee) || User.IsInRole(SD.Role_Admin))
{
<div class="container">
    <div class="row mb-5">
        <div class="four col-md-3">
            <div class="counter-box bg-warning rounded-3">
                <i class="fa fa-book"></i> <span class="counter">@ViewBag.products</span>
                <p>Products</p>
            </div>
        </div>
        <div class="four col-md-3">
            <div class="counter-box bg-primary rounded-3">
                <i class="fa fa-group"></i> <span class="counter">@ViewBag.registeredUsers </span>
                <p>Total Users</p>
            </div>
        </div>
        <div class="four col-md-3">
            <div class="counter-box bg-secondary rounded-3">
                <i class="fa fa-group"></i> <span class="counter">3</span>
                <p>New Users this week</p>
            </div>
        </div>
        <div class="four col-md-3">
            <div class="counter-box bg-success rounded-3">
                <i class="fa fa-shopping-cart"></i> <span class="counter">@ViewBag.todayOrders</span>
                <p>Orders Today</p>
            </div>
        </div>
    </div>


    <div class="row mb-5">
        <div class="four col-md-3">
            <div class="counter-box bg-secondary rounded-3">
                <i class="fa fa-window-close"></i> <span class="counter">@ViewBag.cancelOrderWeekly</span>
                <p>Cancelled Orders This Week</p>
            </div>
        </div>
        <div class="four col-md-3">
            <div class="counter-box bg-success rounded-3">
                <i class="fa fa-hourglass-half"></i> <span class="counter">@ViewBag.orderProcessing </span>
                <p>Order In Processing</p>
            </div>
        </div>
        <div class="four col-md-3">
            <div class="counter-box bg-warning rounded-3">
                <i class="fa fa-user-check"></i> <span class="counter">@ViewBag.registeredUsers </span>
                <p>Verified Users</p>
            </div>
        </div>
        <div class="four col-md-3">
            <div class="counter-box bg-primary rounded-3">
                <i class="fa fa-truck"></i> <span class="counter">@ViewBag.todayShipment</span>
                <p>Orders Shipped Today</p>
            </div>
        </div>
    </div>

</div>

<div class="row">
    <div class="col-sm-6">
     <div class="card">
       <canvas id="myChart" width="100" height="70"></canvas>
         <h5 class="text-center">Orders This Week</h5>
     </div>
     </div>

    <div class="col-sm-6">
     <div class="card">
        <canvas id="myChart2" width="100" height="70"></canvas>
         <h5 class="text-center">Order For Last 6 Weeks</h5>
    </div>
    </div>
    </div>
}
else
{
    <div class="row pb-3 backgroundWhite">

        @foreach (var product in Model)
        {
            <div class="col-lg-3 col-md-6">
                <div class="row p-2">
                    <div class="col-12">
                        <div class="card shadow-lg p-3 mb-5 bg-white rounded" style="width: 18rem;">
                            <img src="@product.ImageUrl" class="card-img-bottom" alt="..." style="height: 37vh;">
                            <div class="card-body">
                                <h5 class="card-title text-primary">@product.Title</h5>
                                @if (product.OfferName != null)
                                {
                                    double dPrice = product.Discount;
                                    double discountedPrice = (dPrice / 100)* product.Price;
                                    discountedPrice = product.Price - discountedPrice;
                                    <p class="card-text">Price Rs: <b class="">@discountedPrice</b></p>
                                    <span class="text-warning">@product.OfferName</span>
                                    <p class="card-text"><del style="color: orangered; font-size: 14px;">Price Rs: <b class="">@product.Price.ToString("0.00")</b></del></p>
                                }
                                else
                                {
                                    <p class="card-text">Price Rs: <b class="">@product.Price.ToString("0.00")</b></p>
                                }

                                <a asp-action="Details" class="btn btn-primary form-control" asp-route-id="@product.Id">Details</a>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        }


        <nav aria-label="Page navigation example">
            <ul class="pagination justify-content-center">
                @await this.Component.InvokeAsync("Pager", new { PagingList = this.Model })
            </ul>
        </nav>
    </div>
}



@section Scripts{
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        $(document).ready(function () {

            $('.counter').each(function () {
                $(this).prop('Counter', 0).animate({
                    Counter: $(this).text()
                }, {
                    duration: 1000,
                    easing: 'swing',
                    step: function (now) {
                        $(this).text(Math.ceil(now));
                    }
                });
            });

        });
    </script>



    <script>
        const url = '/Customer/Home/GetAll';
        let weekdata = [];
        chartIt();
        async function chartIt() {
            const data = await getData();
            console.log(data.weekdata);
            let ctx = document.getElementById('myChart').getContext('2d');
            let myChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: ['Weekly Shipment', 'Weekly Order', 'Weekly Cancellation'],
                    datasets: [{
                        label: 'No of Orders',
                        data: data.weekdata,
                        backgroundColor: 'rgba(6,128,249)',
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        }
       

        async function getData() {
            const response = await fetch(url);
            const data = await response.json();
            weekdata[0] = data.weeklyShipment;
            weekdata[1] = data.weeklyOrder;
            weekdata[2] = data.weeklyCancellation;
            //console.log(weekdata);
            return { weekdata };
        }

    </script>

    <script>
        let ctx2 = document.getElementById('myChart2').getContext('2d');
        let myChart2 = new Chart(ctx2, {
            type: 'bar',
            data: {
                labels: ['Monthly Shipment', 'Monthly Order', 'Monthly Cancellation'],
                datasets: [{
                    label: 'No of Orders',
                    data: [17, 25, 7],
                    backgroundColor: 'rgba(6,128,249)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    </script>
}